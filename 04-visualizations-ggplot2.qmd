# ויז'ואליזציות {#sec-ggplot2}

ויז'ואליזציות הן כלי קריטי בהבנה ובתקשור של נתונים (וחוץ מזה, הן כיפיות 😊). בפרק זה נלמד איך להפיק ויז'ואליזציות באמצעות חבילת `ggplot2`.

חבילת `ggplot2` מבוססת על תיאוריה שנקראת דקדוק של גרפיקה [@wickham2010]. עקרונות התיאוריה מניחים את קווי היסוד הבאים לבניה של כל גרף. בקווים כלליים:

1.  כל משתנה ממופה למאפיין מסוים על הגרף ("אסטטיקה"), לדוגמה, משתנה יכול להיות ממופה לציר X לציר Y, והוא יכול להיות ממופה לצבע, גודל, שקיפות, צורה, ועוד.
2.  לאחר המיפוי מתווספות שכבות שנקראות גיאומטריות. ישנן גיאומטריות רבות והן קובעות כיצד יראה הגרף, לדוגמה נקודות (דיאגרמת פיזור), קווים, עמודות (bars), אריחים (tiles), קופסאות התפלגות (boxplots), ועוד.
3.  לבסוף מולבשים על הגרף עוד "קישוטים" כמו כותרות, מקרא, צירים, וכל מה שנדרש בשביל לשדרג לו את הניראות ואת הנהירות.

בחבילת `ggplot2` יש עשרות רבות של גיאומטריות, והיא מאפשרת גמישות מירבית לייצר כמעט כל גרף שתצטרכו.

נדגים זאת כעת בסט הנתונים של הפינגויינים, תוך שאנחנו משתמשים בויז'ואליזציות על מנת להבין מה הקשר בין אורך לרוחב המקור.

## הבסיס

נתחיל בגרף פשוט, ונתקדם ממנו לסדרה של גרפים.

```{r penguins package load}
#| warning: false
#| message: false
library(palmerpenguins)
library(tidyverse)
```

```{r penguins vis 1}
penguins %>% 
  ggplot(aes(x = bill_length_mm,
             y = bill_depth_mm)) + 
  geom_point()
```

ראשית מבחינת הנתונים המוצגים, לא ניתן להבחין בקשר משמעותי. במידה מסוימת נראה שעליה במשתנה bill_length_mm מעידה על ירידה במשתנה bill_depth_mm (כי ככל שמתקדמים בציר ה-x יש ירידה קלה של התצפיות בציר ה-y). זוהי מסקנה שגויה, ותיכף נבין למה, אבל לפני כן, עוד מספר הסברים

הודעת האזהרה שמופיעה מעל הגרף מיידעת אותנו שיש שתי שורות שאינן באות לידי ביטוי בתרשים בשל ערכים חסרים (חסר נתון על אורך או עומק או שניהם).

בנוגע לתחביר:

-   הפונקציה `ggplot` מגדירה תרשים.

-   הארגומנט הראשון שלה הוא הדאטה עצמו (`penguins`), שנכנס באמצעות האופרטור `%>%`.

-   הארגומנט השני נכנס כפונקציה `aes()` שמגדירה אסטטיקות. במקרה זה מוגדרים שני מיפויי אסטטיקות, לציר x ולציר y.

-   לאחר מכן יש חיבור `+` על מנת להוסיף שכבה של גיאומטריה מסוג נקודה `geom_point`, וקיבלנו גרף.

## מיפויים נוספים

כעת ניזכר שבדאטה מיוצגים שלושה זנים של פינגויינים, וייתכן שהקשר גם מושפע מעובדה זו. נוסיף מיפוי של זן הפינגויין לצבע של הנקודות. הוספה זו תתבצע עם הארגומנט `color=species`:

```{r penguins vis 2}
penguins %>% 
  ggplot(aes(x = bill_length_mm,
             y = bill_depth_mm,
             color = species)) + 
  geom_point()
```

כעת לאחר הוספת הצבע ניתן להבחין בבירור בכך שבכל אחד מהזנים **עליה** במשתנה `bill_length_mm` מביאה לעלייה במשתנה `bill_depth_mm` (וזה בעצם הפוך למה שחשבנו כשהסתכלנו על התרשים מבלי לחלק לזנים של הפינגויינים השונים). זו תובנה מאוד משמעותית, שנקראת בשפה המקצועית "אינטראקציה". יש אינטראקציה בין אורך המקור לבין זן הפינגויין בהשפעתם על עומק המקור. ניגע באינטראקציות גם בהמשך (בפרק על רגרסיה לינארית).

::: note
**כדאי להכיר - "פרדוס סימפסון":** התופעה שבה הבחנו בשינוי המשמעות של הקשר בין המשתנים כאשר מוסיפים אינטראקציה או זיהוי של הקבוצה, תוארה על ידי סימפסון [@simpson1951]. אחד מהגילגולים המודרנים של הפרדוקס הזה נמצא בדאטהסט שנוצר על ידי סימולציה ונקרא Datasaurus dozen [ראו @murray2021].

ב-Datasaurus משתמשים בסימולציה כדי לייצר שנים עשר קבוצות שבפני עצמן נראות זהות בפרמטרים מסוימים (ממוצע בציר x, ממוצע בציר y, סטיית תקן, קורלציה, וכו'), אבל כשמציגים את הנקודות בדיאגרמת פיזור, באופן מובחן בין הקבוצות, מקבלים את התרשים הבא:

```{r datasaurus dozen example}
library(datasauRus)
datasaurus_dozen %>% 
  group_by(dataset) %>% 
  summarize(mean(x),
            mean(y),
            sd(x),
            sd(y),
            cor(x, y))
datasaurus_dozen %>% 
  ggplot(aes(x = x, y = y)) + 
  geom_point() + 
  facet_wrap(~dataset)
```

בתרשים זה השתמשנו גם בפונקציות שראינו קודם, וגם בפונקציה נוספת שנקראת `facet_wrap` שמפרקת את התרשים לתתי-תרשימים, בכל אחד נמצאים הנתונים של קבוצה אחרת (מהמשתנה `dataset`).
:::

## כותרות גרף וצירים

כעת נייפה את הגרף עם כותרות:

```{r penguins vis 3}
penguins %>% 
  ggplot(aes(x = bill_length_mm,
             y = bill_depth_mm,
             color = species)) + 
  geom_point() + 
  xlab("Bill length [mm]") + 
  ylab("Bill depth [mm]") + 
  ggtitle("Relationship of bill length and depth in penguins", 
          subtitle = "Interaction with species")
```

## הגדרת תמות

ניתן להגדיר תמות (Themes) שיתנו לגרף חזות אחרת. בחבילת `ggplot2` יש כמה תמות מוגדרות מראש שניתן להתחיל מהם וגם לעצב אותן מחדש. כדוגמה, נשתמש בתמה מסוג `linedraw` ונגדיר מחדש את מיקום המקרא ואת גודל הטקסט של הכותרות.

```{r examples of themes}
penguins %>% 
  ggplot(aes(x = bill_length_mm,
             y = bill_depth_mm,
             color = species)) + 
  geom_point() + 
  xlab("Bill length [mm]") + 
  ylab("Bill depth [mm]") + 
  ggtitle("Relationship of bill length and depth", 
          subtitle = "Interaction with species") + 
  theme_linedraw() + 
  theme(legend.position = "top",
        plot.title = element_text(size = 22),
        axis.title = element_text(size = 15),
        legend.box.background = element_rect(linetype = 1, linewidth = 1))
```

::: information
רוב הרכיבים בתוך התרשים נשלטים בתוך הפונקציה`theme` באמצעות פונקציות הכוונה כגון `element_text` (מאפייני טקסט), `element_rect` (מאפייני תחום מרובע), `element_line` (מאפייני קווים), וכו'. בתיעוד הפקודה `theme` ניתן לעיין באפשרויות השונות.
:::

::: question
השתמשו בפקודה `facet_wrap` כשכבה נוספת לתרשים הקודם על מנת לפצל את הזנים השונים לתתי-תרשימים. הדגמה לשימוש בפקודה נמצאת בחלק הקודם של פרק זה (בקוד שמסביר על פרדוקס סימפסון).
:::

## גיאומטריות נוספות

נדגים מספר גיאומטריות נוספות מההיצע הרב שיש בחבילת `ggplot2`.

### Boxplot

דיאגרמה מסוג Boxplot עוזרת לנו להבין את צורת ההתפלגות. הדיאגרמה מציגה "קופסה" שתוחמת 50% מהנתונים (החלק התחתון של הקופסה הוא רבעון ראשון, והחלק העליון של הקופסה הוא רבעון שלישי). במרכזה של הקופסה מוצג החציון קקו עבה (מחלק את התצפיות לחצי-חצי). ערכי קיצון, אם ישנם, מופיעים כנקודות. במידה ומופיעה קופסה שאינה סימטרית סביב החציון, הדבר מעיד על כך שההתפלגות אינה התפלגות נורמלית.

נציג את התפלגות המשקל של הפינגויינים בתרשים, בהפרדה לפי זן הפינגויינים, ומיד לאחריו נציג את החציון, ורבעונים של כל קבוצה.

```{r boxplot example}
penguins %>% 
  ggplot(aes(y = body_mass_g, x = species)) + 
  geom_boxplot() + 
  ggtitle("Penguin weight") + 
  xlab("Species") + 
  ylab("Mass [grams]")

penguins %>% 
  filter(!is.na(body_mass_g)) %>% 
  group_by(species) %>% 
  summarize(median_mass = median(body_mass_g),
            q1_mass = quantile(body_mass_g, 0.25),
            q3_mass = quantile(body_mass_g, 0.75))
```

**איך מזהים ערכי קיצון?**

ערכי קיצון היא בעיה בפני עצמה ואפשר להקדיש לה פרק, ואפילו ספר שלם. יש לערכי קיצון השלכות משמעותיות במגוון שימושים, החל ממודלים (כמו רגרסיה שנלמד עליה בספר זה) וחישובים שונים (ממוצע לדוגמה מושפע מאוד מערכי קיצון), דרך זיהוי אנומליות.

ערכי הקיצון מחושבים כ-1.5\*טווח בין רבעוני מהרבעון הראשון מטה או מהרבעון השלישי מעלה, כלומר נקודות אשר מרוחקות לפחות פי 1.5 הטווח הבין רבעוני (הטווח "הסביר") ביחס לרבעונים.

אם נמחיש זאת על קבוצת הפינגויינים מסוג Chinstrap. הרבעון הראשון מתקבל ב-3488 גרם, והרבעון השלישי מתקבל ב-3950 גרם. הטווח הבין רבעון לכן הינו 462. כלומר הטווח הבין רבעוני כפול 1.5 הינו 693.

כלומר, כל נקודה שנמצאת מחוץ לתחום של \[3950+693, 3488-693\] תיחשב כערך חריג ותסומן כנקודה.

```{r extreme values}
extreme_hinges <- c(3488-693, 3950+693)
extreme_hinges
penguins %>% 
  filter(species == "Chinstrap") %>% 
  filter(body_mass_g < extreme_hinges[1] | body_mass_g > extreme_hinges[2])
```

### צפיפות

תרשים נוסף שיכול לסייע בהבנת צורת ההתפלגות הינו תרשים שמציג את הצפיפות (תזכורת: פונקצית צפיפות הינה הפונקציה שהשטח שמתחת לה מהווה את פונקצית ההתפלגות. לגובה של פונקצית צפיפות אין משמעות בערך בפני עצמו, אלא רק בכך שסך האינטגרל מתחת לפונקצית הצפיפות שווה 1). הצפיפות יכולה להראות לנו האם ההתפלגות סימטרית, האם היא בעלת מודל אחד (פיק יחיד כמו בהתפלגות נורמלית) או בי-מודלית (שני פיקים, כמו בהרכבה של שתי התפלגויות נורמליות), וכן היא יכולה לסייע לנו להבין האם יש התפלגות אחרת שמתאימה לתיאור הנתונים. הפקודה שמייצרת גרף צפיפות היא `geom_density`.

```{r density}
penguins %>% 
  ggplot(aes(x = body_mass_g, color = species)) + 
  geom_density() + 
  ggtitle("Penguin weight: density functions") + 
  xlab("Body mass [grams]") + 
  ylab("Density")
```

כמה הבדלים בולטים מהתרשים:

1.  ניתן לראות שהשונות (הפיזור) במשקל הגוף גדול יותר בסוג Gentoo, וגם ב-Adelie קצת יותר מב-Chinstrap.
2.  ניתן לראות שב-Gentoo יש התפלגות בי-מודלית (שתי גבעות).
3.  ניתן לראות ששני הזנים Adelie ו-Chinstrap בעלי התפלגות סביב אותו משקל גוף.

::: question
נסו לשער מה מקור ההתפלגות הבי-מודלית בפינגויינים מזן Gentoo. בדקו את השערתכם עם תרשימים מתאימים.

רמז - נסו לבחון האם פיצול ה-Gentoo לפי משתנה נוסף מייצג שני גרפים בעלי דמיון רב יותר להתפלגות נורמלית (סימטרית ובעלת פיק יחיד).
:::

### היסטוגרמה

היסטוגרמה הוא גרף נוסף שנועד להציג התפלגות של משתנים רציפים, על ידי שבירה של הערכים הרציפים לערכים בדידים (קבוצות טווחים), בשונה מהגרפים הקודמים.

בנייה של היסטגרמה תתבצע באמצעות הפונקציה `geom_histogram`.

```{r histogram example}
penguins %>% 
  ggplot(aes(x = body_mass_g, fill = species)) + 
  geom_histogram() + 
  ggtitle("Penguin weight: histogram") + 
  xlab("Body mass [grams]") + 
  ylab("Counts [# observations]")
```

ניתן לשלוט במספר העמודות (ה-bins) על ידי הגדרה של הארגומנט `bins=` בתוך הפונקציה `geom_histogram`. הערך ברירת המחדל הינו 30 בינים.

### בארים

בארים הם גרף עמודות. יש שתי גיאומטריות שמסייעות לנו בגרף עמודות: `geom_bar` ו-`geom_col`. ההבדל המרכזי ביניהן הוא ש-`geom_bar` מקבלת דאטה גולמי וסופרת, בעוד ש-`geom_col` מקבלת מוצר סופי. נמחיש זאת בדוגמה שמתארת את מספר התצפיות מכל סוג:

```{r geom bars and cols}
penguins %>% 
  ggplot(aes(species)) + 
  geom_bar() + 
  ggtitle("Number of penguins of eash species (geom_bar)")

penguins %>% 
  count(species) %>% 
  ggplot(aes(x = species, y = n)) + 
  geom_col() + 
  ggtitle("Number of penguins of eash species (geom_col)")
```

שתי הפקודות עם אותו הפלט בדיוק. אני באופן אישי מעדיף את השימוש ב-`geom_col` משום שיותר קל לעשות לה debug (בכך שנראה מה הדאטה שנכנס פנימה).

## סיכום
