[
["base-r.html", "פרק 2 בסיס השפה (Base R) 2.1 השמת משתנים, פעולות אריתמטיות ופונקציות", " פרק 2 בסיס השפה (Base R) בפרק זה נלמד את הבסיס של R, בעיקר נכיר את הפקודות הבסיסיות, אופרטורים (תנאים לוגיים) שונים, התניות, לולאות, סוגי משתנים ובניית פונקציות. בסיס זה נקרא הרבה פעמים גם Base R משום שהוא אינו מכיל חבילות הרחבה כלשהן, ומגיע עם התקנה חדשה של R. כדי לתרגל את הפקודות שתלמדו בפרק זה (ובפרקים הבאים) מומלץ לפתוח חלון של RStudio ולנסות את הפקודות השונות תוך כדי שאתם קוראים את הפרק. 2.1 השמת משתנים, פעולות אריתמטיות ופונקציות ניתן להריץ ב-R פעולות אריתמטיות (חיבור, חיסור, כפל, חילוק), פונקציות, ולהגדיר משתנים שונים. לדוגמה, הקוד הבא מגדיר משתנה a משתנה b ומכניס את הסכום שלהם למשתנה חדש שיקרא a_plus_b. a &lt;- 5 b &lt;- 3 a_plus_b &lt;- a + b a_plus_b ## [1] 8 שימו לב שההשמה לתוך משתנה מתבצעת עם האופרטור -&gt;, ניתן גם להשתמש ב= לצורך השמה, כתיב זה פחות נפוץ. לדוגמה: a_plus_b = a + b # this form of assignment `=` is less common, don&#39;t use it (use `&lt;-`) 2.1.1 קביעת שמות משתנים קודם השתמשנו בשמות a, b , ו-a_plus_b כדי לקבוע משתנים. ככלל, מומלץ להשתמש בשמות קצרים בעלי משמעות. שמות משתנים חייבים להתחיל באות באנגלית, ויכולים להכיל אותיות, מספרים, קו תחתון, ונקודה. לדוגמה gender, age, raw_data, וכו’. 2.1.2 סוגי משתנים TBD 2.1.3 שימוש בפונקציות ניתן גם להפעיל פונקציות שונות, לדוגמה לוגריתם, פונקציות טריגונומטריות, ועוד, באופן הבא: log(100) # natural logarithm ## [1] 4.60517 log10(100) # base 10 logarithm ## [1] 2 sin(pi) # sin(pi) is 0 but may give you a surprising answer, why? ## [1] 1.224647e-16 sqrt(4) # square root of 4 ## [1] 2 שאלה למחשבה: למה התשובה לחישוב \\(\\sin(\\pi)\\) שונה מ-0? ככלל, הפעלת פונקציה ב-R תיראה כך: # some code which defines the variable `bar` and then some_result &lt;- some_function(foo = bar) # or simply some_result &lt;- some_function(bar) כאשר some_result יחזיק את התוצאה של הפונקציה. הפונקציה עצמה נקראת some_function, היא מקבלת ארגומנט (משתנה) יחיד שנקרא foo ואנחנו משתמשים במשתנה שערכו bar שנכנס לארגומנט. כדי להמחיש נראה דוגמה נוספת, הפעם עם פונקציה פשוטה שגם נגדיר בעצמנו. נסו לעיין בקוד ולהבין מה המשמעות של כל שורה בקוד. שלושת השורות הראשונות בקוד מגדירות פונקציה חדשה, וההמשך מריץ אותה. # define a new function which adds a number one_plus &lt;- function(number){ number + 1 } # use the function: one_plus(1) ## [1] 2 one_plus(one_plus(1)) ## [1] 3 "]
]
