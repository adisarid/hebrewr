[
["index.html", "המדריך העברי למשתמש ב-R הקדמה", " המדריך העברי למשתמש ב-R עדי שריד גרסה 0.0.1 בתאריך 2020-10-05 17:46:49 הקדמה R שפה נפלאה, היא התחילה כשפה סטטיסטית, וגם כיום זה השימוש המרכזי שלה. בפועל אפשר לעשות בה כמעט הכל. החל מניתוח נתונים ועד בניית אפליקציות ואוטומציות מורכבות. אצלנו בעסק (מכון שריד) אנחנו משתמשים ב-R לניתוח נתונים, הצגת תוצאות עם דשבורדים בזמן אמת, הפקת דוחות Power Point בלחיצת כפתור, אוטומציות של תהליכים שונים בעסק, ועוד הרבה - היא הפכה לכלי עבודה שימושי והחליפה הרבה מאוד מהדברים שהיינו עושים בעבר עם כלים אחרים. ללומדים את השפה יש מקורות רבים ומגוונים - ספרים, סרטוני YouTube, בלוגים, ועוד. העניין הוא שרוב המקורות שישנם כתובים באנגלית. זה מה שהביא אותי לכתוב את הספר הזה, ולעזור לקהל הקוראים שיותר נוח לו ללמוד R בעברית. התוכן שבספר שלפניכם מבוסס על מספר קורסים שלימדתי בשנים האחרונות, כולל הכשרות מקצועיות בחברות סטארטאפ, וקורסי לימוד לתואר ראשון שנתתי באוניברסיטה. למי מיועד הספר? הספר מיועד לאנשים שמתחילים ללמוד את R, סטודנטים או כאלו שעוברים מכלי סטטיסטי אחר. הספר מתאים גם לכאלו שיודעים R ברמה בינונית ורוצים לחזק את הבסיס, או כאלו שרוצים להשתפשף בידיעות שלהם על החבילות שנלמדות בספר (כמו tidyverse). הספר אינו נועד להחליף ספרי תיאוריה סטטיסטית, הוא אינו מכסה תיאוריה סטטיסטית לעומק, אלא בעיקר מדגים כיצד ניתן לממש כלים סטטיסטיים שונים באמצעות R. למה R ולא Python? כמו שמרמזת הכותרת, יש היום שתי שפות שמובילות בתחום ה-Data Science, הן R ו-Python. בנקודה הזו אין שחור ולבן, טוב יותר או פחות. אני עובד בשתי השפות, ולי באופן אישי יש העדפה חזקה לשימוש ב-R, פשוט כי היא מרגישה לי יותר טבעית, זה כנראה נגזרת של העובדה שזה מה שלמדתי בהתחלה, וזה מה שהתמקצעתי בו. בפועל בשתי השפות יש כלים רבים ושימושיים, ובכל הקשור במשימות של ניתוח נתונים, שתי השפות נותנות מענה טוב מאוד. מבין שתיהן Python יותר נפוצה משום שהיא נפוצה כשפת תכנות (באופן כללי), בעוד ש-R מוכוונת יותר לתחום הסטטיסטיקה. בפועל, שתיהן עושות את העבודה, וכדאי להתאים את השפה לצורך. לדוגמה R הרבה פעמים נוחה יותר לביצוע ניתוח נתונים, אבל ל-Python עשוי להיות יתרון במעבר ל-Production (הטמעה במערכות). הדיון של בחירה בשפה מסוימת צריך להיגזר מהמשימה הנדרשת, ההקשר העסקי, ועוד הרבה שיקולים אחרים. ככלל למי שמשתלב בתוך ארגון כדאי לדעת שיש ב-R חבילות שמאפשרות להפעיל גם קוד Python מתוך R (חבילת reticulate), שתאפשר להשתלב עם R גם בתוך ארגון שעובד מסורתית עם Python. מה בספר? בפרק 1 נראה מבוא קצר לתהליך ניתוח הנתונים ונלמד מהם הכלים הנדרשים על מנת להתקין את R. לאחר מכן נצלול, בפרק 2 לבסיס של R כשפת תכנות. הפרק מתייחס לחלקים ב-R שמגיעים בגרסה ה“ערומה ביותר” מה שמכונה גם Base R. בפרק 3 נלמד את הבסיס של חבילות tidyverse ואיך הן מרחיבות את Base-R והופכות את הקוד שלנו ליותר קריא, ואת הכתיבה ליותר נוחה. אנחנו נתמקד בעיקר בשלבי הכנת הנתונים לקראת ניתוח, ואז בפרק 4 נלמד על ויז’ואליזציות באמצעות חבילת ggplot2. לעולם הסטטיסטי ניכנס בפרק 5 עם מבחני השערה, ובפרק 6 עם רגרסיה לינארית. לאחר מכן נצלול קצת יותר לעומק עם מודלים מתקדמים מעולם ה-Data Science תוך שימוש בחבילת tidymodels בפרק 7. הנוסח שלפניכם הוא טיוטה, ולכן חלקים מסוימים עוד חסרים ממנו, וחלקים מסוימים עוד ישתנו. מי שמוצא טעות בספר, מוזמן לפנות אלי בטוויטר @SaridResearch. "],
["introduction.html", "פרק 1 מבוא 1.1 תהליך ניתוח נתונים 1.2 איך מתקינים את R? 1.3 איך משתמשים ב-RStudio?", " פרק 1 מבוא 1.1 תהליך ניתוח נתונים בספר הזה אני מאמץ את נקודת ההשקפה של (Wickham and Grolemund 2016) שמציגים את אבני הבניין של עבודת מדען הנתונים כפי שמומחש באיור הבא: המחשה של תהליך ניתוח הנתונים כל תהליך ניתוח נתונים מורכב מיבוא סט הנתונים, סידור שלהם בצורה שנוח לעבוד איתה, לאחר מכן מחקר על הנתונים, שהוא תהליך איטרטיבי (חוזר על עצמו) שמורכב מהתמרות שונות על הנתונים (טרנספורמציות), המחשות בתרשימים (ויז’ואליזציות), ומידול של הנתונים. לבסוף, התהליך עובר למסמך, מצגת או אמצעי אחר, ומוצג למקבלי החלטות. בספר זה נדון בשלבים של יבוא הנתונים, סידור, וכלל שלבי המחקר (טרנספורמציות, ויז’ואליזציות, ומידול). אך ראשית, לפני שנתחיל בצעדים הראשונים (למידת בסיס השפה), נראה כיצד להתקין את R. 1.2 איך מתקינים את R? התקנת התוכנה פשוטה מאוד. R היא שפה בקוד פתוח (Open Source) מה שאומר שכל אחד יכול להתקין אותה ללא עלות. כמו כן, ישנה סביבת פיתוח, גם היא חינמית ובקוד פתוח, הנקראת RStudio IDE. על מנת להתקין את R עליכם להיכנס לכתובת https://cran.r-project.org/ ולבחור בגרסה המתאימה למערכת ההפעלה שלכם. לאחר מכן, כדי להתקין את RStudio היכנסו לכתובת https://rstudio.com/products/rstudio/download/. הגרסה החינמית של RStudio נקראת RStudio Desktop והיא זמינה לכל צורך (כולל לשימוש במסגרת מסחרית). הסיבה שאנחנו מתקינים גם את R וגם את RStudio היא שבהתקנת R בלבד, מקבלים ממשק משתמש בסיסי ביותר, בעוד שלאחר התקנת RStudio ניתן יהיה לעבוד עם ממשק משתמש נוח שיש לו הרבה אפשרויות שיקלו עליכם את הלמידה ואת העבודה השוטפת ב-R. 1.3 איך משתמשים ב-RStudio? לאחר ההתקנה, כשתפעילו את RStudio, תראו חלון המפוצל לשלושה (או אולי ארבעה) חלקים. החלק הגדול בצד שמאל הוא ה-Console, הוא סביבת ה-R המריצה את הקוד שלכם. אתם יכולים לנסות לרשום בו קוד ולראות מה קורה, לדוגמה תנסו לרשום 2+2 וללחוץ Enter או לרשום pi וללחוץ Enter. 2+2 ## [1] 4 pi ## [1] 3.141593 בצד ימין למעלה ישנה חלונית המחולקת לטאבים. בין הטאבים שמופיעים בה תוכלו לראות את: Environment - משתנים או פונקציות שנטענו לסביבה History - היסטורית הפקודות שהרצתם Connections - חיבורים למקורות נתונים Tutorial - הצגה של מדריכים שונים שמלמדים איך להשתמש בחבילות של R בצד ימין למטה תופיעה חלונית נוספת המחולקת גם היא לטאבים: Files - תוכן התיקייה הנוכחית Plots - תרשימים שנכין יופיעו בטאב זה Packages - חבילות שזמינות לנו או שנטענו לסביבה (יסומנו ב-V) Help - חלונית עזרה על פקודות Viewer - צפיה בתכנים שונים שנכין (בעיקר תכנים אינטראקטיביים כמו טבלאות html תרשימים אינטראקטיביים, ואפליקציות). בתוך משתמשים מתחילים נשתמש בחלק קטן מאלו, אך ככל שיעבור זמן תראו שאתם משתמשים ביותר ויותר אפשרויות, וגם אפשרויות נוספות שכרגע אינן מופיעות לכם. עוד כמה פינות חשובות שנמצאות ב-RStudio: אם תלחצו על Help-&gt;Cheat sheets תוכלו לראות רשימה של “שליפים”. דפים שימושיים שמרכזים פקודות שונות של R וחבילות של R. לדוגמה, אחד מהשליפים ששם נקרא RStudio IDE Cheat Sheet, והוא מכיל הרבה הסברים נוספים על הממשק משתמש של RStudio. בתפריט File -&gt; New File ישנה אפשרות לפתוח קובץ חדש. מומלץ שתנסו לפתוח קובץ חדש מסוג R Script, שישמש אותנו לפרק הבא. שימו לב: לאחר שפתחתם Script חדש, וכתבתם בו קוד, על מנת להריץ את הקוד צריך לסמן אותו וללחוץ Ctrl+Enter. זה יגרום ל-R להריץ את כל הקוד המסומן. כעת אנחנו מוכנים לפרק הבא, שבו נלמד את בסיס השפה, מה שמכונה גם Base R. References "],
["base-r.html", "פרק 2 בסיס השפה (Base R) 2.1 השמת משתנים, פעולות אריתמטיות ופונקציות", " פרק 2 בסיס השפה (Base R) בפרק זה נלמד את הבסיס של R, בעיקר נכיר את הפקודות הבסיסיות, אופרטורים (תנאים לוגיים) שונים, התניות, לולאות, סוגי משתנים ובניית פונקציות. בסיס זה נקרא הרבה פעמים גם Base R משום שהוא אינו מכיל חבילות הרחבה כלשהן, ומגיע עם התקנה חדשה של R. כדי לתרגל את הפקודות שתלמדו בפרק זה (ובפרקים הבאים) מומלץ לפתוח חלון של RStudio ולנסות את הפקודות השונות תוך כדי שאתם קוראים את הפרק. 2.1 השמת משתנים, פעולות אריתמטיות ופונקציות ניתן להריץ ב-R פעולות אריתמטיות (חיבור, חיסור, כפל, חילוק), פונקציות, ולהגדיר משתנים שונים. לדוגמה, הקוד הבא מגדיר משתנה a משתנה b ומכניס את הסכום שלהם למשתנה חדש שיקרא a_plus_b. a &lt;- 5 b &lt;- 3 a_plus_b &lt;- a + b a_plus_b ## [1] 8 שימו לב שההשמה לתוך משתנה מתבצעת עם האופרטור -&gt;, ניתן גם להשתמש ב= לצורך השמה, כתיב זה פחות נפוץ. לדוגמה: a_plus_b = a + b # this form of assignment `=` is less common, don&#39;t use it (use `&lt;-`) 2.1.1 קביעת שמות משתנים קודם השתמשנו בשמות a, b , ו-a_plus_b כדי לקבוע משתנים. ככלל, מומלץ להשתמש בשמות קצרים בעלי משמעות. שמות משתנים חייבים להתחיל באות באנגלית, ויכולים להכיל אותיות, מספרים, קו תחתון, ונקודה. לדוגמה gender, age, raw_data, וכו’. 2.1.2 סוגי משתנים בבסיס השפה יש כמה סוגי משתנים, שקובעים מה סוג הערכים שהמשתנה יכול לקבל: מספר שלם (Integer) מספר רציף (Double) מחרוזת (Character) משתנה קטגוריות (Factor) תאריך (Date) רשימה (List) כל משתנה חדש אנחנו מגדירים ב-R הוא למעשה וקטור. אגב, גם כשאנחנו מגדירים משתנה כערך בודד, בעצם הוא וקטור עם איבר אחד. אנחנו יכולים להשתמש בפקודה c (קיצור של המילה combine) כדי לשלב וקטורים שונים. נראה דוגמאות להגדרות של וקטורים מסוגים שונים. some_integer &lt;- c(1L, 2L, 3L) # The L sign stands for &quot;Long integer&quot; some_integer ## [1] 1 2 3 some_double &lt;- c(1, 2, pi, exp(1)) some_double ## [1] 1.000000 2.000000 3.141593 2.718282 some_character &lt;- c(&quot;This&quot;, &quot;is&quot;, &quot;a&quot;, &quot;character&quot;, &quot;vector&quot;) some_character ## [1] &quot;This&quot; &quot;is&quot; &quot;a&quot; &quot;character&quot; &quot;vector&quot; some_factor &lt;- factor(c(&quot;Apples&quot;, &quot;Oranges&quot;, &quot;Paers&quot;, &quot;Mangos&quot;, &quot;Apples&quot;, &quot;Oranges&quot;)) some_factor ## [1] Apples Oranges Paers Mangos Apples Oranges ## Levels: Apples Mangos Oranges Paers some_date &lt;- c(Sys.Date(), as.Date(&quot;1993-08-01&quot;)) some_date ## [1] &quot;2020-10-05&quot; &quot;1993-08-01&quot; למשתני קטגוריות יש שימוש חשוב בסטטיסטיקה שעוד נראה אותו בפרקים הבאים, ולכן הוא מובחן ממשתנה מחרוזת ומקבל מקום של כבוד. כפי שניתן לראות, כאשר מדפיסים אותו, R מדווח גם על הרמות השונות שכלולות בו. שימוש בפקודה typeof(some_variable) יציג את סוג המשתנה. typeof(some_character) ## [1] &quot;character&quot; typeof(some_date) ## [1] &quot;double&quot; typeof(some_factor) ## [1] &quot;integer&quot; ניתן לשים לב ש-R מחשיב את המשתנה הקטגוריאלי כמספר שלם (integer) ואת התאריך כמספר רציף (double). באמצעות הפקודה c והפקודה typeof בדקו מה קורה כאשר מחברים משתנים מסוגים שונים אחד לשני. האם התוצאה הגיונית? מה ההיגיון? האם יש מקרים בהם התוצאה של חיבור משתנים עשויה להטעות? בדקו את c(some_factor, some_character) ודוגמאות נוספות. סוג המשתנה האחרון שטרם הצגנו הוא הרשימה. רשימה היא אובייקט מרכזי ב-R שמאפשר לנו לאחד משתנים ווקטורים מסוגים שונים, לתוך dataset שיאפשר לנו בהמשך לנתח נתונים. ישנן מספר דרכים להגדיר רשימה, אחת מהן באמצעות הפקודה list. לדוגמה, הרשימה הבאה תכיל את כל הוקטורים שהגדרנו עד כה, מבלי שהם יאבדו מהמשמעות שלהם (כפי שקורה כשמנסים לעשות חיבור רגיל). my_list &lt;- list(my_int = some_integer, my_double = some_double, my_character = some_character, my_factor = some_factor, my_date = some_date) my_list ## $my_int ## [1] 1 2 3 ## ## $my_double ## [1] 1.000000 2.000000 3.141593 2.718282 ## ## $my_character ## [1] &quot;This&quot; &quot;is&quot; &quot;a&quot; &quot;character&quot; &quot;vector&quot; ## ## $my_factor ## [1] Apples Oranges Paers Mangos Apples Oranges ## Levels: Apples Mangos Oranges Paers ## ## $my_date ## [1] &quot;2020-10-05&quot; &quot;1993-08-01&quot; typeof(my_list) ## [1] &quot;list&quot; 2.1.3 שימוש בפונקציות ניתן גם להפעיל פונקציות שונות, לדוגמה לוגריתם, פונקציות טריגונומטריות. למעשה בסעיף הקודם כבר ראינו מספר פונקציות כגון c ו-typeof. כעת נראה עוד מספר דוגמאות: log(100) # natural logarithm ## [1] 4.60517 log10(100) # base 10 logarithm ## [1] 2 sin(pi) # sin(pi) is 0 but may give you a surprising answer, why? ## [1] 1.224647e-16 sqrt(4) # square root of 4 ## [1] 2 שאלה למחשבה: למה התשובה לחישוב \\(\\sin(\\pi)\\) שונה מ-0? ככלל, הפעלת פונקציה ב-R תיראה כך: # some code which defines the variable `bar` and then some_result &lt;- some_function(foo = bar) # or simply some_result &lt;- some_function(bar) כאשר some_result יחזיק את התוצאה של הפונקציה. הפונקציה עצמה נקראת some_function, היא מקבלת ארגומנט (משתנה) יחיד שנקרא foo ואנחנו משתמשים במשתנה שערכו bar שנכנס לארגומנט. כדי להמחיש נראה דוגמה נוספת, הפעם עם פונקציה פשוטה שגם נגדיר בעצמנו. נסו לעיין בקוד ולהבין מה המשמעות של כל שורה בקוד. שלושת השורות הראשונות בקוד מגדירות פונקציה חדשה, וההמשך מריץ אותה. # define a new function which adds a number one_plus &lt;- function(number){ number + 1 } # use the function: one_plus(1) ## [1] 2 one_plus(one_plus(1)) ## [1] 3 "],
["data-munging-tidyverse.html", "פרק 3 הכנת הנתונים (שימוש ב-tidyverse)", " פרק 3 הכנת הנתונים (שימוש ב-tidyverse) TBD "],
["ggplot2.html", "פרק 4 ויז’ואליזציה עם ggplot2", " פרק 4 ויז’ואליזציה עם ggplot2 TBD "],
["hypothesis-tests.html", "פרק 5 מבחני השערות", " פרק 5 מבחני השערות TBD "],
["linear-regression.html", "פרק 6 רגרסיה לינארית", " פרק 6 רגרסיה לינארית TBD "],
["advanced-models.html", "פרק 7 מודלים מתקדמים", " פרק 7 מודלים מתקדמים TBD "],
["about.html", "על הכותב", " על הכותב כותב הספר הוא ד\"ר עדי שריד, שותף ומנהל מחלקת חקר הביצועים ומדעי הנתונים במכון שריד. לעדי יש דוקטורט מטעם המחלקה להנדסת תעשייה באוניברסיטת תל-אביב, תואר שני בחקר ביצועים מאוניברסיטת תל-אביב, ותואר ראשון במתמטיקה עם סטטיסטיקה וחקר ביצועים מהטכניון. עדי לימד ומלמד R במגוון מסגרות: באוניברסיטה במסגרת קורסים כגון מבוא לסטטיסטיקה, ניתוח נתונים, וקורסים פרטיים במכללות ובחברות הייטק. את הניסיון בהכשרה בלימוד R מביא איתו עדי לספר הנוכחי שנועד לתת מענה ללומדים את R ששפת האם שלהם היא עברית. לפרטים נוספים adisarid.github.io. "],
["ביבליוגרפיה.html", "ביבליוגרפיה", " ביבליוגרפיה מקורות Wickham, Hadley, and Garrett Grolemund. 2016. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. \" O’Reilly Media, Inc.\". "]
]
